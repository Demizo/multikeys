<Window x:Class="MultikeysEditor.View.Dialogues.KeystrokeCommandDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MultikeysEditor.View.Dialogues"
        xmlns:p="clr-namespace:MultikeysEditor.Properties"
        mc:Ignorable="d"
        Title="{x:Static p:Strings.WindowTitleNewCommandDialog}" Height="598" Width="562"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner">

    <!-- Data context for this window is set in code behind -->
    <Grid x:Name="RootGrid" Margin="0,0,0,0">
        <TabControl x:Name="CommandTabControl" Height="520" VerticalAlignment="Top">

            <TabItem Header="{x:Static p:Strings.ReadableNameUnicodeKey}">
                <Grid Margin="0,0,0,0">

                    <GroupBox Header="{x:Static p:Strings.PromptUnicodePromptInput}" Margin="10,10,10,327">
                        <TextBox x:Name="UnicodeTextInput"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Top"
                             Height="114"
                             Margin="10,10,10,0"
                             TextWrapping="Wrap"
                             FontSize="16"
                             TextChanged="UnicodeTextInput_TextChanged"/>
                    </GroupBox>

                    <!-- ItemSource for this ListBox are set in code-behind. -->
                    <ListBox x:Name="UnicodeCharactersList"
                             HorizontalAlignment="Left"
                             Height="301"
                             Margin="10,184,0,0"
                             VerticalAlignment="Top"
                             Width="172"
                             SelectionChanged="UnicodeCharactersList_SelectionChanged">
                        <!-- Determine how each item should be shown: -->
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock FontFamily="Arial Unicode MS" FontSize="18" FontWeight="SemiBold" MinWidth="40"
                                                   Text="{Binding Path=Character}" Grid.Column="0"/>
                                    <TextBlock VerticalAlignment="Bottom" FontSize="16" FontWeight="SemiBold" Foreground="Gray"
                                                   Text="{Binding Path=Codepoint}" Grid.Column="1"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Margin="187,184,10,10">
                        <Label x:Name="UnicodeSelectedCharacterDisplay"
                               MinHeight="50"
                               Content=""
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               HorizontalAlignment="Stretch"
                               FontSize="50"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Content="{x:Static p:Strings.PromptUnicodeSelectedCharacterName}" Grid.Column="0" Grid.Row="0"/>
                            <Label x:Name="PromptUnicodeSelectedCharacterName" Grid.Column="1" Grid.Row="0"/>

                            <Label Content="{x:Static p:Strings.PromptUnicodeSelectedCharacterCodepoint}" Grid.Column="0" Grid.Row="1"/>
                            <Label x:Name="PromptUnicodeSelectedCharacterCodepoint" Grid.Column="1" Grid.Row="1"/>

                            <Label Content="{x:Static p:Strings.PromptUnicodeSelectedCharacterBlock}" Grid.Column="0" Grid.Row="2"/>
                            <Label x:Name="PromptUnicodeSelectedCharacterBlock" Grid.Column="1" Grid.Row="2"/>

                            <Label Content="{x:Static p:Strings.PromptUnicodeSelectedCharacterCategory}" Grid.Column="0" Grid.Row="3"/>
                            <Label x:Name="PromptUnicodeSelectedCharacterCategory" Grid.Column="1" Grid.Row="3"/>

                        </Grid>
                    </StackPanel>

                    <CheckBox x:Name="PromptUnicodeTriggerOnRepeat"
                              Content="{x:Static p:Strings.PromptUnicodeTriggerOnRepeat}"
                              HorizontalAlignment="Right" Margin="0,474,22,0"
                              VerticalAlignment="Top"/>

                </Grid>
            </TabItem>

            <TabItem Header="{x:Static p:Strings.ReadableNameExecutablekey}">
                <Grid>
                    <Label Content="{x:Static p:Strings.ExecutableKeyCommand}" Margin="10,10,452,456" />
                    <Button x:Name="ChooseExecutableFileButton" Content="{x:Static p:Strings.PromptExecutableChooseFile}" Margin="375,10,10,461" Click="ChooseExecutableFileButton_Click" />
                    <TextBox x:Name="ExecutableCommandInput"
                             Height="114"
                             FontSize="16" Margin="10,36,10,342"
                             TextWrapping="Wrap"/>
                    <Label Content="{x:Static p:Strings.ExecutableKeyArguments}" Margin="10,166,452,300" />
                    <TextBox x:Name="ExecutableArgumentsInput"
                             Height="114"
                             FontSize="16" Margin="10,192,10,186" />
                    <Button x:Name="TestExecutableCommandButton" Margin="10,328,409,138" Content="{x:Static p:Strings.PromptExecutableTestCommand}" Click="TestExecutableCommandButton_Click" />
                </Grid>
            </TabItem>

            <TabItem Header="{x:Static p:Strings.ReadableNameDeadkey}">
                <Grid>
                    <TextBox
                        x:Name="NewDeadKeyReplacementFromInput"
                        HorizontalAlignment="Left"
                        Height="23"
                        Margin="58,52,0,0"
                        TextWrapping="Wrap"
                        Text=""
                        VerticalAlignment="Top"
                        Width="120"
                        />
                    <Label Content="🡆" FontSize="20" Margin="183,44,332,408" />
                    <TextBox
                        x:Name="NewDeadKeyReplacementToInput"
                        HorizontalAlignment="Left"
                        Height="23"
                        Margin="218,52,0,0"
                        TextWrapping="Wrap"
                        Text=""
                        VerticalAlignment="Top"
                        Width="120"
                        />
                    <DataGrid
                        x:Name="DeadKeyReplacementsTable"
                        Margin="57,86,57,178"
                        CanUserAddRows="False"
                        CanUserReorderColumns="False"
                        CanUserResizeColumns="True"
                        CanUserResizeRows="False"
                        CanUserSortColumns="True"
                        CanUserDeleteRows="True"
                        IsManipulationEnabled="True"
                        HeadersVisibility="Column"
                        SelectionMode="Single"
                        ColumnWidth="*"/>
                    <Button Content="➕"
                            FontWeight="UltraBold"
                            HorizontalAlignment="Left"
                            Margin="357,52,0,0"
                            VerticalAlignment="Top"
                            Width="75"
                            Click="AddNewDeadKeyReplacement"/>
                    <Label
                        Content="{x:Static p:Strings.PromptDeadKeyIndependentText}"
                        HorizontalContentAlignment="Right"
                        Margin="107,16,291,448" />
                    <TextBox
                        x:Name="DeadKeyIndependentTextInput"
                        HorizontalAlignment="Left"
                        Height="23"
                        Margin="264,20,0,0"
                        TextWrapping="Wrap"
                        Text=""
                        VerticalAlignment="Top"
                        Width="120"/>
                    <Label
                        Content="{x:Static p:Strings.PromptDeadKeyTableInstructions}"
                        HorizontalContentAlignment="Left"
                        Margin="57,319,57,145" />
                </Grid>
            </TabItem>

            <TabItem Header="{x:Static p:Strings.ReadableNameMacroKey}">
                <Grid>
                    <CheckBox x:Name="PromptMacroTriggerOnRepeat"
                              Content="{x:Static p:Strings.PromptMacroTriggerOnRepeat}"
                              HorizontalAlignment="Right" Margin="0,474,22,0"
                              VerticalAlignment="Top"/>
                    <!-- ItemSource for this ListBox are set in code-behind. -->
                    <ListBox x:Name="MacroList"
                             Height="301"
                             Margin="85,64,0,0"
                             VerticalAlignment="Top" HorizontalAlignment="Left" Width="380">
                        <!-- Determine how each item should be shown: -->
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock FontFamily="Arial Unicode MS" FontSize="14" FontWeight="Thin" MinWidth="20"
                                                   Text="{Binding Path=VirtualKeyCode,StringFormat={}0x{0:X2}}" Foreground="Gray" Grid.Column="0"/>
                                    <TextBlock VerticalAlignment="Bottom" FontSize="16" FontWeight="SemiBold" Foreground="Black"
                                                   Text="{Binding Path=VirtualKeyName}" Grid.Column="1" Margin="10, 0, 10, 0" />
                                    <TextBlock VerticalAlignment="Bottom" FontSize="14" Foreground="Gray"
                                                   Text="{Binding Path=KeyDownName}" Grid.Column="2" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ComboBox
                        x:Name="MacroCombobox"
                        Margin="171,12,0,0"
                        VerticalAlignment="Top" HorizontalAlignment="Left" Width="207"
                        />
                    <Button x:Name="AddMacroKeystrokeUpButton"
                            Content="{x:Static p:Strings.MacroKeyUp}"
                            HorizontalAlignment="Left"
                            Margin="277,39,0,0"
                            VerticalAlignment="Top"
                            Width="101"
                            Click="AddMacroKeystrokeUpButton_Click"/>
                    <Button x:Name="AddMacroKeystrokeDownButton"
                            Content="{x:Static p:Strings.MacroKeyDown}"
                            HorizontalAlignment="Left"
                            Margin="171,39,0,0"
                            VerticalAlignment="Top"
                            Width="101"
                            Click="AddMacroKeystrokeDownButton_Click"/>
                    <Button x:Name="MacroMoveUpButton"
                        Content="{x:Static p:Strings.PromptMacroMoveUp}"
                        HorizontalAlignment="Left"
                        Margin="85,370,0,0"
                        VerticalAlignment="Top"
                        Width="157"
                        Click="MacroMoveUpButton_Click"/>
                    <Button x:Name="MacroMoveDownButton"
                        Content="{x:Static p:Strings.PromptMacroMoveDown}"
                        HorizontalAlignment="Left"
                        Margin="85,395,0,0"
                        VerticalAlignment="Top"
                        Width="157"
                        Click="MacroMoveDownButton_Click"/>
                    <Button x:Name="MacroRemoveButton"
                        Content="{x:Static p:Strings.PromptMacroRemove}"
                        HorizontalAlignment="Left"
                        Margin="340,370,0,0"
                        VerticalAlignment="Top"
                        Width="125"
                        Click="MacroRemoveButton_Click"/>
                </Grid>
            </TabItem>



        </TabControl>
        <Button x:Name="PromptUnicodeConfirm"
                             Content="{x:Static p:Strings.PromptUnicodeConfirm}"
                             HorizontalAlignment="Right" Margin="0,0,10,10" Width="197"
                             FontWeight="DemiBold"
                             FontSize="16"
                             Click="PromptConfirm_Click" Background="#FFCCEECC" Height="25" VerticalAlignment="Bottom"/>
    </Grid>
</Window>
