<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeadKeyReplacementFrom" xml:space="preserve">
    <value>De</value>
  </data>
  <data name="DeadKeyReplacements" xml:space="preserve">
    <value>Substituições</value>
  </data>
  <data name="DeadKeyReplacementTo" xml:space="preserve">
    <value>Para</value>
  </data>
  <data name="ExecutableKeyArguments" xml:space="preserve">
    <value>Argumentos</value>
  </data>
  <data name="KeyPress" xml:space="preserve">
    <value>Pressão de tecla</value>
  </data>
  <data name="KeyRelease" xml:space="preserve">
    <value>Soltura de tecla</value>
  </data>
  <data name="MacroSequence" xml:space="preserve">
    <value>Sequência</value>
  </data>
  <data name="Modifiers" xml:space="preserve">
    <value>Modificadores</value>
  </data>
  <data name="ReadableNameDeadkey" xml:space="preserve">
    <value>Tecla de acentuação</value>
  </data>
  <data name="ReadableNameExecutablekey" xml:space="preserve">
    <value>Tecla de comando</value>
  </data>
  <data name="ReadableNameMacroKey" xml:space="preserve">
    <value>Tecla de macro</value>
  </data>
  <data name="ReadableNameUnicodeKey" xml:space="preserve">
    <value>Tecla de texto</value>
  </data>
  <data name="ThisKeyIsNotRemapped" xml:space="preserve">
    <value>Esta tecla não está remapeada.</value>
  </data>
  <data name="VirtualKeyCode" xml:space="preserve">
    <value>Código de tecla virtual</value>
  </data>
  <data name="KeyOptionsAssignCommand" xml:space="preserve">
    <value>Atribuir comando</value>
  </data>
  <data name="KeyOptionsEditCommand" xml:space="preserve">
    <value>Editar comando</value>
  </data>
  <data name="KeyOptionsRegisterModifier" xml:space="preserve">
    <value>Registrar como modificador</value>
  </data>
  <data name="KeyOptionsRemoveCommand" xml:space="preserve">
    <value>Remover comando</value>
  </data>
  <data name="KeyOptionsUnregisterModifier" xml:space="preserve">
    <value>Remover dos modificadores</value>
  </data>
  <data name="ReadableNameModifier" xml:space="preserve">
    <value>Tecla modificadora</value>
  </data>
  <data name="WindowTitleEditCommandDialog" xml:space="preserve">
    <value>Editar comando</value>
  </data>
  <data name="WindowTitleNewCommandDialog" xml:space="preserve">
    <value>Novo comando</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Erro</value>
  </data>
  <data name="KeyboardName" xml:space="preserve">
    <value>Identificador único:</value>
  </data>
  <data name="MenuFile" xml:space="preserve">
    <value>Arquivo</value>
  </data>
  <data name="MenuFileClose" xml:space="preserve">
    <value>Fechar</value>
  </data>
  <data name="MenuFileNew" xml:space="preserve">
    <value>Novo</value>
  </data>
  <data name="MenuFileOpen" xml:space="preserve">
    <value>Abrir...</value>
  </data>
  <data name="MenuFileSave" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="MenuFileSaveAs" xml:space="preserve">
    <value>Salvar como...</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Não</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Nenhum</value>
  </data>
  <data name="PromptUnicodePromptInput" xml:space="preserve">
    <value>Insira um ou mais caracteres Unicode:</value>
  </data>
  <data name="PromptUnicodeSelectedCharacterBlock" xml:space="preserve">
    <value>Bloco:</value>
  </data>
  <data name="PromptUnicodeSelectedCharacterCategory" xml:space="preserve">
    <value>Categoria:</value>
  </data>
  <data name="PromptUnicodeSelectedCharacterCodepoint" xml:space="preserve">
    <value>Ponto de código:</value>
  </data>
  <data name="PromptUnicodeSelectedCharacterName" xml:space="preserve">
    <value>Nome:</value>
  </data>
  <data name="PromptUnicodeTriggerOnRepeat" xml:space="preserve">
    <value>Ativar repetidamente ao segurar a tecla:</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Aviso</value>
  </data>
  <data name="WarningNoLayout" xml:space="preserve">
    <value>Nenhum layout está aberto.</value>
  </data>
  <data name="WarningWillOverwriteWorkingLayout" xml:space="preserve">
    <value>Mudanças não salvas serão perdidas. Continuar?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Sim</value>
  </data>
  <data name="KeyboardAlias" xml:space="preserve">
    <value>Nome:</value>
  </data>
  <data name="KeyboardNameDialogAnyKeyboard" xml:space="preserve">
    <value>(Qualquer teclado)</value>
  </data>
  <data name="KeyboardNameDialogFinish" xml:space="preserve">
    <value>Finalizar</value>
  </data>
  <data name="KeyboardNameDialogListenForInput" xml:space="preserve">
    <value>Detectar teclado</value>
  </data>
  <data name="KeyboardNameDialogPressAnyKey" xml:space="preserve">
    <value>Pressione qualquer tecla no teclado a ser detectado.</value>
  </data>
  <data name="KeyboardNameDialogUseAnyKeyboard" xml:space="preserve">
    <value>Usar qualquer teclado</value>
  </data>
  <data name="KeyboardNameEdit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="WindowTitleKeyboardAliasDialog" xml:space="preserve">
    <value>Editar nome do teclado</value>
  </data>
  <data name="WindowTitleKeyboardNameDialog" xml:space="preserve">
    <value>Editar o identificador único do teclado</value>
  </data>
  <data name="WindowTitleMainWindow" xml:space="preserve">
    <value>Multikeys - Janela inicial</value>
  </data>
  <data name="WarningSaveLayoutToStart" xml:space="preserve">
    <value>É necessário salvar o layout para usá-lo. Salvar agora?</value>
  </data>
  <data name="CoreStatePaused" xml:space="preserve">
    <value>Estado atual: Pausado</value>
  </data>
  <data name="CoreStateRunning" xml:space="preserve">
    <value>Estado atual: Ativo</value>
  </data>
  <data name="CoreStateStopped" xml:space="preserve">
    <value>Estado atual: Parado</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmação</value>
  </data>
  <data name="WarningRemoveCommand" xml:space="preserve">
    <value>Remover este comando?</value>
  </data>
  <data name="PromptModifierAddToExistingModifier" xml:space="preserve">
    <value>Adicionar a um modificador existente:</value>
  </data>
  <data name="PromptModifierNewModfier" xml:space="preserve">
    <value>Novo modificador:</value>
  </data>
  <data name="PromptModifierConfirm" xml:space="preserve">
    <value>Registrar modificador</value>
  </data>
  <data name="WindowTitleNewModifierDialog" xml:space="preserve">
    <value>Registrar tecla como modificadora</value>
  </data>
  <data name="WarningRemoveModifier" xml:space="preserve">
    <value>Deixar de usar esta tecla como modificadora?</value>
  </data>
  <data name="WarningModifierOverridesCommands" xml:space="preserve">
    <value>Aviso: Esta tecla está remapeada em outras camadas. Registrá-la como modificadora terá precedência sobre os outros remapeamentos. Continuar?</value>
  </data>
  <data name="KeyOptionsChangeModifierName" xml:space="preserve">
    <value>Mudar nome do modificador</value>
  </data>
  <data name="PromptChangeModifierNameConfirm" xml:space="preserve">
    <value>Confirmar</value>
  </data>
  <data name="PromptChangeModifierNameText" xml:space="preserve">
    <value>Escolha um novo nome para o modificador:</value>
  </data>
  <data name="WindowTitleChangeModifierName" xml:space="preserve">
    <value>Mudar nome do modificador:</value>
  </data>
  <data name="PromptChangeModifierNameAlreadyExists" xml:space="preserve">
    <value>Nome já existe.</value>
  </data>
  <data name="PromptChangeModifierNameInvalidText" xml:space="preserve">
    <value>Por favor, use um nome válido.</value>
  </data>
  <data name="LogFailedToCreateLog" xml:space="preserve">
    <value>Houve um erro durante a execução do programa. Um arquivo de log não pôde ser criado. Erro:</value>
  </data>
  <data name="LogFailedToWriteToLog" xml:space="preserve">
    <value>Houve um erro durante a execução do programa. Não foi possível escrever no arquivo de log. Erro:</value>
  </data>
  <data name="LogSeeLog" xml:space="preserve">
    <value>Houve um erro durante a execução do programa. Para detalhes, verifique o arquivo em:</value>
  </data>
  <data name="KeyboardControlDeleteKeyboard" xml:space="preserve">
    <value>Remover teclado</value>
  </data>
  <data name="LayoutControlAddNewKeyboard" xml:space="preserve">
    <value>Adicionar novo teclado</value>
  </data>
  <data name="MenuImportKeyboard" xml:space="preserve">
    <value>Importar...</value>
  </data>
  <data name="KeyboardControlChangePhysicalLayout" xml:space="preserve">
    <value>Mudar layout</value>
  </data>
  <data name="WindowTitleChangeLayout" xml:space="preserve">
    <value>Mudar layout de teclado</value>
  </data>
  <data name="PromptChangeLayoutChoosePhysicalLayout" xml:space="preserve">
    <value>Escolha o layout físico:</value>
  </data>
  <data name="PromptChangeLayoutConfirm" xml:space="preserve">
    <value>Confirmar</value>
  </data>
  <data name="PromptChangeLayoutUseBigEnter" xml:space="preserve">
    <value>Usar tecla Enter maior</value>
  </data>
  <data name="KeyboardControlChangeLogicalLayout" xml:space="preserve">
    <value>Mudar letras</value>
  </data>
  <data name="PromptChangeLayoutChooseLogicalLayout" xml:space="preserve">
    <value>Escolha qual layout mostrar nas teclas:</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Escolher...</value>
  </data>
  <data name="ChooseFileToAssignToThisKey" xml:space="preserve">
    <value>Escolha um arquivo para atribuir a esta tecla</value>
  </data>
  <data name="PromptExecutableArguments" xml:space="preserve">
    <value>Argumentos para passar ao arquivo:</value>
  </data>
  <data name="PromptExecutableFilename" xml:space="preserve">
    <value>Escolha o arquivo a abrir:</value>
  </data>
  <data name="PromptNewCommandAssignCommand" xml:space="preserve">
    <value>Atribuir comando:</value>
  </data>
  <data name="WarningNoFileSelected" xml:space="preserve">
    <value>Um arquivo executável deve ser selecionado.</value>
  </data>
  <data name="PromptMacroAddKeystroke" xml:space="preserve">
    <value>Adicionar uma tecla</value>
  </data>
  <data name="PromptMacroAddKeystrokeConfirm" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="PromptMacroKeystrokeDown" xml:space="preserve">
    <value>Pressão</value>
  </data>
  <data name="PromptMacroKeystrokeUp" xml:space="preserve">
    <value>Soltura</value>
  </data>
  <data name="PromptMacroColumnHeaderCode" xml:space="preserve">
    <value>Código</value>
  </data>
  <data name="PromptMacroColumnHeaderDown" xml:space="preserve">
    <value>Tecla pressionada</value>
  </data>
  <data name="PromptMacroColumnHeaderName" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="PromptMacroButtonAddAfterSelected" xml:space="preserve">
    <value>Adicionar após selecionado</value>
  </data>
  <data name="PromptMacroButtonAddAtEnd" xml:space="preserve">
    <value>Adicionar no fim</value>
  </data>
  <data name="PromptMacroButtonDeleteSelected" xml:space="preserve">
    <value>Remover selecionado</value>
  </data>
  <data name="PromptDeadkeyIndependentHeader" xml:space="preserve">
    <value>Valor próprio</value>
  </data>
  <data name="PromptDeadkeyIndependentInsertText" xml:space="preserve">
    <value>Insira um ou mais caracteres Unicode:</value>
  </data>
  <data name="PromptDeadkeyReplacementsAdd" xml:space="preserve">
    <value>Adicionar substituição</value>
  </data>
  <data name="PromptDeadkeyReplacementsEdit" xml:space="preserve">
    <value>Editar substituição</value>
  </data>
  <data name="PromptDeadkeyReplacementsFrom" xml:space="preserve">
    <value>De:</value>
  </data>
  <data name="PromptDeadkeyReplacementsHeader" xml:space="preserve">
    <value>Substituições</value>
  </data>
  <data name="PromptDeadkeyReplacementsRemove" xml:space="preserve">
    <value>Remover substituição</value>
  </data>
  <data name="PromptDeadkeyReplacementsTo" xml:space="preserve">
    <value>Para:</value>
  </data>
  <data name="ExecutableKeyCommand" xml:space="preserve">
    <value>Comando</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Mudar idioma</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Opções</value>
  </data>
</root>